# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные
# и заполнять список только числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и
# отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


class NotInt(Exception):
    def __init__(self, my_err):
        self.my_err = my_err


class NumberInput:
    def __init__(self):
        self.my_list = []

    def number_input(self):
        while True:
            try:
                number = (input('Введите число: '))
                if number.isnumeric():
                    number = int(number)
                    self.my_list.append(number)
                else:
                    raise NotInt('Ошибка ввода')
            except NotInt:
                print('Ввели не число!')

            exit_input = input('Если хотите завершить ввод, введите q, иначе просто нажмите Enter: ')
            if exit_input.lower() == 'q':
                return f'Завершен ввод. Итоговый списко = {self.my_list}'


num = NumberInput()
print(num.number_input())
